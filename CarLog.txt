U cant start the engine beacuse the gear is not 0 2023-01-22 11:53:56.095685
The engine is off u should turn it up 2023-01-22 11:56:45.734304
u cant stop the car while driving 2023-01-22 11:59:04.134929
u cant stop the car while driving 2023-01-22 12:05:09.407975
U cant start the engine beacuse the gear is not 0 2023-01-22 12:19:47.952450
Passed(test_start_engine): with Parameters None,True 2023-01-22 19:14:18.346861
Passed(test_set_gear): with Parameters 2,2 2023-01-22 19:20:45.569916
Passed(test_get_gear): with Parameters 0,0 2023-01-22 19:23:02.935608
Passed(test_get_speed_car): with Parameters 2,60 2023-01-22 19:26:12.915378
Passed(test_if_drive_destination_is_posible): with Parameters <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000160827E9CD0>>,True 2023-01-22 19:37:46.624394
Passed(test_set_gear): with Parameters 2,3 2023-01-22 19:39:54.937526
Passed(test_get_speed_car): with Parameters 2,90 2023-01-22 19:47:48.301897
Passed(test_start_engine): with Parameters None,True 2023-01-22 19:59:51.073489
Passed(test_get_speed_car): with Parameters60 2023-01-22 20:38:10.183716
Passed(test_get_speed_car): with Parameters70 2023-01-22 20:38:25.159142
Passed(test_get_speed_car): with Parameters60 2023-01-22 20:39:09.509004
Passed(test_start_engine): with Parameters ,False 2023-01-22 20:40:20.310967
Passed(test_start_engine) 2023-01-22 20:43:24.546070
Failed (test_start_engine): True != False 2023-01-22 20:43:48.001604
Failed (test_get_speed_car): 60 != 80 2023-01-22 20:45:13.128012
Passed(test_start_engine): 2023-01-22 20:46:22.846022
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x0000017FC89962E0>.status_engine 2023-01-22 20:46:39.250203
Failed (test_if_drive_destination_is_posible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001B5EAD47AF0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001B5EAD47AF0>> = <car.Car object at 0x000001B5EAD47AF0>.if_drive_destination_is_posible 2023-01-22 20:50:59.910185
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000024C6E39A040>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000024C6E39A040>> = <car.Car object at 0x0000024C6E39A040>.get_gear 2023-01-22 20:52:53.204118
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000002D74C609310>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000002D74C609310>> = <car.Car object at 0x000002D74C609310>.get_gear 2023-01-22 20:53:31.693872
Passed(test_set_gear): 2023-01-22 21:32:34.249421
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001B4918EA2B0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001B4918EA2B0>> = <car.Car object at 0x000001B4918EA2B0>.get_gear 2023-01-22 21:32:52.195157
Passed(test_start_engine) 2023-01-22 21:33:06.397475
Passed(test_set_gear): 2023-01-22 21:34:07.572405
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001B411AA2310>.status_engine 2023-01-22 21:48:18.107554
Passed(test_get_gear):  2023-01-22 21:58:00.173029
Passed(test_get_speed_car): 2023-01-22 21:58:00.178038
Passed(test_if_drive_destination_is_posible): 2023-01-22 21:58:00.181559
Passed(test_set_gear): 2023-01-22 21:58:00.185582
Passed(test_start_engine) 2023-01-22 21:58:00.188596
Passed(test_fuel_to_buy): 2023-01-22 21:59:28.658302
Failed (test_if_drive_destination_is_posible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001CD9FE81B50>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001CD9FE81B50>> = <car.Car object at 0x000001CD9FE81B50>.if_drive_destination_is_posible 2023-01-22 21:59:43.976484
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x00000236DD609310>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000236DD609310>> = <car.Car object at 0x00000236DD609310>.get_gear 2023-01-23 09:36:33.596642
Passed(test_stop_engine): 2023-01-23 09:38:14.000394
Passed(test_start_engine): 2023-01-23 09:43:59.302693
Passed(test_start_engine): 2023-01-23 09:51:58.360040
Passed(test_fuel_to_buy): 2023-01-23 10:07:04.906853
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x00000203CD69BFD0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000203CD69BFD0>> = <car.Car object at 0x00000203CD69BFD0>.get_gear 2023-01-23 10:10:46.828213
Passed(test_start_engine): 2023-01-23 10:13:03.253437
Passed(test_start_engine): 2023-01-23 10:22:43.077136
Passed(test_start_engine): 2023-01-23 10:29:40.884335
Passed(test_fuel_to_buy): 2023-01-23 10:38:10.872796
Passed(test_get_gear):  2023-01-23 10:39:41.413309
Passed(test_get_speed_car): 2023-01-23 10:39:41.430469
Passed(test_if_drive_destination_is_posible): 2023-01-23 10:39:41.433551
Passed(test_set_gear): 2023-01-23 10:39:41.433551
Passed(test_start_engine) 2023-01-23 10:39:41.433551
Passed(test_start_engine): 2023-01-23 10:41:44.630298
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x0000026CCC57F400>.status_engine 2023-01-23 10:41:44.630298
Passed(test_set_gear): 2023-01-23 10:41:44.639717
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000026CCC57F160>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026CCC57F160>> = <car.Car object at 0x0000026CCC57F160>.get_gear 2023-01-23 10:41:44.641421
Passed(test_get_gear): 2023-01-23 10:41:44.644449
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x0000026CCC57F3A0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026CCC57F3A0>> = <car.Car object at 0x0000026CCC57F3A0>.get_gear 2023-01-23 10:41:44.648571
Passed(test_get_speed_car): 2023-01-23 10:41:44.650344
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x0000026CCC57F3D0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x0000026CCC57F3D0>> = <car.Car object at 0x0000026CCC57F3D0>.get_car_speed 2023-01-23 10:41:44.652327
Passed(test_stop_engine): 2023-01-23 10:41:44.652327
Passed(test_fuel_to_buy): 2023-01-23 10:41:44.655841
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000026CCC57FD30>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000026CCC57FD30>> = <car.Car object at 0x0000026CCC57FD30>.if_drive_destination_is_posible 2023-01-23 10:41:44.655841
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x00000165FB930F70>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000165FB930F70>> = <car.Car object at 0x00000165FB930F70>.get_gear 2023-01-23 10:49:16.007426
Passed(test_start_engine): 2023-01-23 10:52:46.803374
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x0000026341E83490>.status_engine 2023-01-23 10:52:46.803374
Passed(test_set_gear): 2023-01-23 10:52:46.803374
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000026341E83460>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026341E83460>> = <car.Car object at 0x0000026341E83460>.get_gear 2023-01-23 10:52:46.803374
Passed(test_get_gear): 2023-01-23 10:52:46.803374
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x0000026341E83850>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026341E83850>> = <car.Car object at 0x0000026341E83850>.get_gear 2023-01-23 10:52:46.819086
Passed(test_get_speed_car): 2023-01-23 10:52:46.819086
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x0000026341E83AC0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x0000026341E83AC0>> = <car.Car object at 0x0000026341E83AC0>.get_car_speed 2023-01-23 10:52:46.819086
Passed(test_stop_engine): 2023-01-23 10:52:46.819086
Passed(test_fuel_to_buy): 2023-01-23 10:52:46.819086
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000026341E83700>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000026341E83700>> = <car.Car object at 0x0000026341E83700>.if_drive_destination_is_posible 2023-01-23 10:52:46.835395
Passed(test_get_gear):  2023-01-23 10:52:46.930167
Passed(test_get_speed_car): 2023-01-23 10:52:46.930167
Passed(test_if_drive_destination_is_posible): 2023-01-23 10:52:46.930167
Passed(test_set_gear): 2023-01-23 10:52:46.930167
Passed(test_start_engine) 2023-01-23 10:52:46.930167
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 10:59:20.876709
Passed(test_start_engine): 2023-01-23 10:59:50.639664
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x0000026851392A90>.status_engine 2023-01-23 10:59:50.639664
Passed(test_set_gear): 2023-01-23 10:59:50.639664
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000026851392B50>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026851392B50>> = <car.Car object at 0x0000026851392B50>.get_gear 2023-01-23 10:59:50.639664
Passed(test_get_gear): 2023-01-23 10:59:50.639664
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x0000026851392C10>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000026851392C10>> = <car.Car object at 0x0000026851392C10>.get_gear 2023-01-23 10:59:50.639664
Passed(test_get_speed_car): 2023-01-23 10:59:50.654676
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x0000026851392CD0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x0000026851392CD0>> = <car.Car object at 0x0000026851392CD0>.get_car_speed 2023-01-23 10:59:50.654676
Passed(test_stop_engine): 2023-01-23 10:59:50.663040
Passed(test_fuel_to_buy): 2023-01-23 10:59:50.663040
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000268513BE190>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000268513BE190>> = <car.Car object at 0x00000268513BE190>.if_drive_destination_is_posible 2023-01-23 10:59:50.663040
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 10:59:50.671441
Passed(test_get_gear):  2023-01-23 10:59:50.671441
Passed(test_get_speed_car): 2023-01-23 10:59:50.671441
Passed(test_if_drive_destination_is_posible): 2023-01-23 10:59:50.671441
Passed(test_set_gear): 2023-01-23 10:59:50.671441
Passed(test_start_engine) 2023-01-23 10:59:50.671441
Passed(test_if_drive_destination_is_posible): 2023-01-23 10:59:57.367276
Failed (test_fuel_to_buy): assert '77' == 35
 +  where '77' = <bound method Car.fuel_to_buy of <car.Car object at 0x00000218F1309F70>>(50)
 +    where <bound method Car.fuel_to_buy of <car.Car object at 0x00000218F1309F70>> = <car.Car object at 0x00000218F1309F70>.fuel_to_buy 2023-01-23 11:00:34.435152
Passed(test_start_engine): 2023-01-23 11:02:58.899842
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x00000211D77BC8B0>.status_engine 2023-01-23 11:02:58.899842
Passed(test_set_gear): 2023-01-23 11:02:58.915395
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x00000211D77BCE50>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000211D77BCE50>> = <car.Car object at 0x00000211D77BCE50>.get_gear 2023-01-23 11:02:58.915395
Passed(test_get_gear): 2023-01-23 11:02:58.915395
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x00000211D7843520>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000211D7843520>> = <car.Car object at 0x00000211D7843520>.get_gear 2023-01-23 11:02:58.915395
Passed(test_get_speed_car): 2023-01-23 11:02:58.931099
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x00000211D78434C0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x00000211D78434C0>> = <car.Car object at 0x00000211D78434C0>.get_car_speed 2023-01-23 11:02:58.931099
Passed(test_stop_engine): 2023-01-23 11:02:58.931099
Passed(test_fuel_to_buy): 2023-01-23 11:02:58.931099
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000211D78433D0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000211D78433D0>> = <car.Car object at 0x00000211D78433D0>.if_drive_destination_is_posible 2023-01-23 11:02:58.931099
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:02:58.947409
Passed(test_get_gear):  2023-01-23 11:02:58.947409
Passed(test_get_speed_car): 2023-01-23 11:02:58.947409
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:02:58.947409
Passed(test_set_gear): 2023-01-23 11:02:58.962510
Passed(test_start_engine) 2023-01-23 11:02:58.965976
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000279148F5340>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000279148F5340>> = <car.Car object at 0x00000279148F5340>.if_drive_destination_is_posible 2023-01-23 11:03:25.686318
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x00000179E2815340>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x00000179E2815340>> = <car.Car object at 0x00000179E2815340>.get_car_speed 2023-01-23 11:03:40.480746
Passed(test_get_speed_car): 2023-01-23 11:03:46.921929
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x00000163A9AD4340>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000163A9AD4340>> = <car.Car object at 0x00000163A9AD4340>.get_gear 2023-01-23 11:03:49.853313
Passed(test_get_gear): 2023-01-23 11:03:53.305905
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001A3283541F0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001A3283541F0>> = <car.Car object at 0x000001A3283541F0>.get_gear 2023-01-23 11:03:57.054560
Passed(test_set_gear): 2023-01-23 11:03:59.954915
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x00000298EEE04340>.status_engine 2023-01-23 11:04:03.325093
Passed(test_start_engine): 2023-01-23 11:04:06.522939
Passed(test_start_engine) 2023-01-23 11:04:11.512877
Passed(test_set_gear): 2023-01-23 11:04:14.127227
Passed(test_get_gear):  2023-01-23 11:04:17.337127
Passed(test_get_speed_car): 2023-01-23 11:04:19.871066
Passed(test_stop_engine):  2023-01-23 11:08:40.279058
Passed(test_start_engine) 2023-01-23 11:10:18.571142
Passed(test_start_engine): 2023-01-23 11:13:31.803979
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001EC7C9538E0>.status_engine 2023-01-23 11:13:31.819649
Passed(test_set_gear): 2023-01-23 11:13:31.819649
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001EC7C953700>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001EC7C953700>> = <car.Car object at 0x000001EC7C953700>.get_gear 2023-01-23 11:13:31.819649
Passed(test_get_gear): 2023-01-23 11:13:31.819649
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001EC7C9536D0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001EC7C9536D0>> = <car.Car object at 0x000001EC7C9536D0>.get_gear 2023-01-23 11:13:31.819649
Passed(test_get_speed_car): 2023-01-23 11:13:31.831025
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000001EC7C953610>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000001EC7C953610>> = <car.Car object at 0x000001EC7C953610>.get_car_speed 2023-01-23 11:13:31.831025
Passed(test_stop_engine): 2023-01-23 11:13:31.836994
Passed(test_fuel_to_buy): 2023-01-23 11:13:31.836994
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001EC7C954E50>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001EC7C954E50>> = <car.Car object at 0x000001EC7C954E50>.if_drive_destination_is_posible 2023-01-23 11:13:31.836994
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:13:31.836994
Passed(test_get_gear):  2023-01-23 11:13:31.847744
Passed(test_get_speed_car): 2023-01-23 11:13:31.847744
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:13:31.852902
Passed(test_set_gear): 2023-01-23 11:13:31.852902
Failed (test_start_engine): None != True 2023-01-23 11:13:31.852902
Passed(test_stop_engine):  2023-01-23 11:13:31.852902
Passed(test_start_engine): 2023-01-23 11:23:43.332581
Passed(test_start_engine): 2023-01-23 11:42:54.631406
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001837AA47490>.status_engine 2023-01-23 11:42:54.631406
Passed(test_set_gear): 2023-01-23 11:42:54.631406
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001837AA47D60>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001837AA47D60>> = <car.Car object at 0x000001837AA47D60>.get_gear 2023-01-23 11:42:54.631406
Passed(test_get_gear): 2023-01-23 11:42:54.631406
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001837AA47D90>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001837AA47D90>> = <car.Car object at 0x000001837AA47D90>.get_gear 2023-01-23 11:42:54.631406
Passed(test_get_speed_car): 2023-01-23 11:42:54.631406
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000001837AA478E0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000001837AA478E0>> = <car.Car object at 0x000001837AA478E0>.get_car_speed 2023-01-23 11:42:54.631406
Passed(test_stop_engine): 2023-01-23 11:42:54.647099
Passed(test_fuel_to_buy): 2023-01-23 11:42:54.647099
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001837AA47A30>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001837AA47A30>> = <car.Car object at 0x000001837AA47A30>.if_drive_destination_is_posible 2023-01-23 11:42:54.647099
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:42:54.647099
Passed(test_get_gear):  2023-01-23 11:42:54.647099
Passed(test_get_speed_car): 2023-01-23 11:42:54.647099
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:42:54.647099
Passed(test_set_gear): 2023-01-23 11:42:54.647099
Failed (test_start_engine): None != True 2023-01-23 11:42:54.647099
Passed(test_stop_engine):  2023-01-23 11:42:54.662729
Passed(test_start_engine): 2023-01-23 11:47:31.861282
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x00000205FF252C10>.status_engine 2023-01-23 11:47:31.861282
Passed(test_set_gear): 2023-01-23 11:47:31.861282
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x00000205FF252CD0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000205FF252CD0>> = <car.Car object at 0x00000205FF252CD0>.get_gear 2023-01-23 11:47:31.861282
Passed(test_get_gear): 2023-01-23 11:47:31.861282
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x00000205FF252D90>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000205FF252D90>> = <car.Car object at 0x00000205FF252D90>.get_gear 2023-01-23 11:47:31.861282
Passed(test_get_speed_car): 2023-01-23 11:47:31.861282
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x00000205FF252DF0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x00000205FF252DF0>> = <car.Car object at 0x00000205FF252DF0>.get_car_speed 2023-01-23 11:47:31.861282
Passed(test_stop_engine): 2023-01-23 11:47:31.876907
Passed(test_fuel_to_buy): 2023-01-23 11:47:31.876907
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000205FF27B2B0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x00000205FF27B2B0>> = <car.Car object at 0x00000205FF27B2B0>.if_drive_destination_is_posible 2023-01-23 11:47:31.876907
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:47:31.876907
Passed(test_get_gear):  2023-01-23 11:47:31.876907
Passed(test_get_speed_car): 2023-01-23 11:47:31.876907
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:47:31.876907
Passed(test_set_gear): 2023-01-23 11:47:31.876907
Failed (test_start_engine): None != True 2023-01-23 11:47:31.876907
Passed(test_stop_engine):  2023-01-23 11:47:31.892530
Failed (test_set_gear): assert 2 == 7
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001554ACCD9D0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001554ACCD9D0>> = <car.Car object at 0x000001554ACCD9D0>.get_gear 2023-01-23 11:48:19.395698
Failed (test_set_gear): assert 2 == 7
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000029AB166FBB0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000029AB166FBB0>> = <car.Car object at 0x0000029AB166FBB0>.get_gear 2023-01-23 11:51:37.977515
Failed (test_set_gear): assert 2 == 7
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000002339B8391F0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000002339B8391F0>> = <car.Car object at 0x000002339B8391F0>.get_gear 2023-01-23 11:52:14.090038
Passed(test_set_gear): 2023-01-23 11:52:19.246207
Passed(test_start_engine): 2023-01-23 11:53:27.419056
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001881E9B8370>.status_engine 2023-01-23 11:53:27.419056
Passed(test_set_gear): 2023-01-23 11:53:27.419056
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001881EA230D0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001881EA230D0>> = <car.Car object at 0x000001881EA230D0>.get_gear 2023-01-23 11:53:27.419056
Passed(test_get_gear): 2023-01-23 11:53:27.419056
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001881EA234C0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001881EA234C0>> = <car.Car object at 0x000001881EA234C0>.get_gear 2023-01-23 11:53:27.434678
Passed(test_get_speed_car): 2023-01-23 11:53:27.434678
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000001881EA23190>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000001881EA23190>> = <car.Car object at 0x000001881EA23190>.get_car_speed 2023-01-23 11:53:27.434678
Passed(test_stop_engine): 2023-01-23 11:53:27.434678
Passed(test_fuel_to_buy): 2023-01-23 11:53:27.434678
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001881EA23580>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001881EA23580>> = <car.Car object at 0x000001881EA23580>.if_drive_destination_is_posible 2023-01-23 11:53:27.434678
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:53:27.434678
Passed(test_get_gear):  2023-01-23 11:53:27.434678
Passed(test_get_speed_car): 2023-01-23 11:53:27.434678
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:53:27.450303
Passed(test_set_gear): 2023-01-23 11:53:27.450303
Failed (test_start_engine): None != True 2023-01-23 11:53:27.450303
Passed(test_stop_engine):  2023-01-23 11:53:27.450303
Passed(test_start_engine): 2023-01-23 11:54:38.000858
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000002C33ED42BE0>.status_engine 2023-01-23 11:54:38.000858
Passed(test_set_gear): 2023-01-23 11:54:38.000858
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000002C33ED42CA0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000002C33ED42CA0>> = <car.Car object at 0x000002C33ED42CA0>.get_gear 2023-01-23 11:54:38.000858
Passed(test_get_gear): 2023-01-23 11:54:38.000858
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000002C33ED42D60>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000002C33ED42D60>> = <car.Car object at 0x000002C33ED42D60>.get_gear 2023-01-23 11:54:38.000858
Passed(test_get_speed_car): 2023-01-23 11:54:38.000858
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000002C33ED42DC0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000002C33ED42DC0>> = <car.Car object at 0x000002C33ED42DC0>.get_car_speed 2023-01-23 11:54:38.000858
Passed(test_stop_engine): 2023-01-23 11:54:38.016491
Passed(test_fuel_to_buy): 2023-01-23 11:54:38.016491
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000002C33ED6C280>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000002C33ED6C280>> = <car.Car object at 0x000002C33ED6C280>.if_drive_destination_is_posible 2023-01-23 11:54:38.016491
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 11:54:38.016491
Passed(test_get_gear):  2023-01-23 11:54:38.016491
Passed(test_get_speed_car): 2023-01-23 11:54:38.016491
Passed(test_if_drive_destination_is_posible): 2023-01-23 11:54:38.016491
Passed(test_set_gear): 2023-01-23 11:54:38.016491
Failed (test_start_engine): None != True 2023-01-23 11:54:38.016491
Passed(test_stop_engine):  2023-01-23 11:54:38.016491
Failed (test_set_gear): assert 2 == 4
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001E95F51FE20>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001E95F51FE20>> = <car.Car object at 0x000001E95F51FE20>.get_gear 2023-01-23 12:04:19.906014
Passed(test_set_gear): 2023-01-23 12:06:08.931630
Failed (test_set_gear):  assert 2 == 32
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000002A3C3F3DFA0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000002A3C3F3DFA0>> = <car.Car object at 0x000002A3C3F3DFA0>.get_gear 2023-01-23 12:07:41.935454
Passed(test_set_gear): 2023-01-23 12:08:05.785085
Passed(test_start_engine): 2023-01-23 12:14:57.798081
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001A7434FEC70>.status_engine 2023-01-23 12:14:57.813745
Passed(test_set_gear): 2023-01-23 12:14:57.813745
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001A7434FEA60>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001A7434FEA60>> = <car.Car object at 0x000001A7434FEA60>.get_gear 2023-01-23 12:14:57.813745
Passed(test_get_gear): 2023-01-23 12:14:57.813745
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001A7434FEA00>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001A7434FEA00>> = <car.Car object at 0x000001A7434FEA00>.get_gear 2023-01-23 12:14:57.813745
Passed(test_get_speed_car): 2023-01-23 12:14:57.813745
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000001A7434FE640>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000001A7434FE640>> = <car.Car object at 0x000001A7434FE640>.get_car_speed 2023-01-23 12:14:57.813745
Passed(test_stop_engine): 2023-01-23 12:14:57.813745
Passed(test_fuel_to_buy): 2023-01-23 12:14:57.829370
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001A74350FC10>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001A74350FC10>> = <car.Car object at 0x000001A74350FC10>.if_drive_destination_is_posible 2023-01-23 12:14:57.829370
Failed (test_fuel_to_buy): '77777' != 35 2023-01-23 12:14:57.829370
Passed(test_get_gear):  2023-01-23 12:14:57.829370
Passed(test_get_speed_car): 2023-01-23 12:14:57.829370
Passed(test_if_drive_destination_is_posible): 2023-01-23 12:14:57.829370
Passed(test_set_gear): 2023-01-23 12:14:57.829370
Failed (test_start_engine): None != True 2023-01-23 12:14:57.844979
Passed(test_stop_engine):  2023-01-23 12:14:57.844979
Passed(test_stop_engine): 2023-01-23 12:31:05.731279
Passed(test_drive): 2023-01-23 13:26:34.359508
Passed(test_drive): 2023-01-23 13:26:49.398903
Passed(test_drive): 2023-01-23 13:28:52.235071
Passed(test_drive): 2023-01-23 13:29:40.327585
Passed(test_drive): 2023-01-23 13:29:51.475203
Failed (test_drive): 1
assert 0
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x00000150C4C8FFD0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x00000150C4C8FFD0>> = <car.Car object at 0x00000150C4C8FFD0>.get_gear 2023-01-23 13:30:59.743029
Failed (test_drive): 0
assert 0
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001B8078D8490>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001B8078D8490>> = <car.Car object at 0x000001B8078D8490>.get_gear 2023-01-23 13:31:31.319851
Failed (test_drive): assert 0 == 49
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x0000020A8CC600D0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000020A8CC600D0>> = <car.Car object at 0x0000020A8CC600D0>.get_gear 2023-01-23 13:34:02.822609
Passed(test_drive): 2023-01-23 13:34:25.152576
Failed (test_drive): assert 49.0 == 48
 +  where 49.0 = <bound method Car.get_feul of <car.Car object at 0x00000138D17B0FA0>>()
 +    where <bound method Car.get_feul of <car.Car object at 0x00000138D17B0FA0>> = <car.Car object at 0x00000138D17B0FA0>.get_feul 2023-01-23 13:34:34.255243
Passed(test_drive): 2023-01-23 13:36:09.987105
Failed (test_drive): assert 0 == 2
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001D8693ACA90>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001D8693ACA90>> = <car.Car object at 0x000001D8693ACA90>.get_gear 2023-01-23 13:36:20.297408
Passed(test_drive): 2023-01-23 13:41:17.364586
Passed(test_drive): 2023-01-23 14:24:35.790720
Passed(test_drive): 2023-01-23 14:27:58.662135
Passed(test_drive): 2023-01-23 14:32:10.329547
Failed (test_drive): assert 360 == 500
 +  where 360 = <bound method Car.get_money of <car.Car object at 0x000001C7938D1F40>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000001C7938D1F40>> = <car.Car object at 0x000001C7938D1F40>.get_money 2023-01-23 14:32:48.227499
Passed(test_drive): 2023-01-23 14:33:23.712079
Passed(test_drive): 2023-01-23 14:39:19.318080
Failed (test_drive): assert 360 == 500
 +  where 360 = <bound method Car.get_money of <car.Car object at 0x00000225B4001910>>()
 +    where <bound method Car.get_money of <car.Car object at 0x00000225B4001910>> = <car.Car object at 0x00000225B4001910>.get_money 2023-01-23 14:39:45.396976
passed filled the car 2023-01-23 14:54:15.137927
passed filled the car 2023-01-23 14:57:32.692324
Passed(test_drive): 2023-01-23 14:57:32.692324
passed filled the car 2023-01-23 14:57:53.131164
passed filled the car 2023-01-23 15:01:50.044655
passed filled the car 2023-01-23 15:03:34.756942
Passed(test_drive): 2023-01-23 15:03:34.756942
passed filled the car 2023-01-23 15:06:04.773497
passed filled the car 2023-01-23 15:07:33.278292
Passed(test_drive): 2023-01-23 15:07:33.294070
Failed (test_drive): assert 500 == 200
 +  where 500 = <bound method Car.get_money of <car.Car object at 0x000001BE8DF3B790>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000001BE8DF3B790>> = <car.Car object at 0x000001BE8DF3B790>.get_money 2023-01-23 15:16:14.680705
Failed (test_drive): assert 500 == 200
 +  where 500 = <bound method Car.get_money of <car.Car object at 0x00000260B0A7FAC0>>()
 +    where <bound method Car.get_money of <car.Car object at 0x00000260B0A7FAC0>> = <car.Car object at 0x00000260B0A7FAC0>.get_money 2023-01-23 15:29:22.458162
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:39:13.665904
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:39:23.401824
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:41:36.766688
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:41:46.705286
Failed (test_drive): assert 500 == 300
 +  where 500 = <bound method Car.get_money of <car.Car object at 0x00000248C99318E0>>()
 +    where <bound method Car.get_money of <car.Car object at 0x00000248C99318E0>> = <car.Car object at 0x00000248C99318E0>.get_money 2023-01-23 15:47:06.386278
Failed (test_drive): assert 290.0 == 300
 +  where 290.0 = <bound method Car.get_money of <car.Car object at 0x000002B861665130>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000002B861665130>> = <car.Car object at 0x000002B861665130>.get_money 2023-01-23 15:47:46.547378
passed filled the car 2023-01-23 15:53:25.821820
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:57:46.079285
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000019BF07AE2E0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000019BF07AE2E0>> = <car.Car object at 0x0000019BF07AE2E0>.if_drive_destination_is_posible 2023-01-23 15:58:10.616154
Passed(test_fuel_to_buy): 2023-01-23 15:58:34.477392
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:59:06.635047
set_gear() missing 1 required positional argument: 'gear' 2023-01-23 15:59:17.182512
Passed(test_drive): 2023-01-23 16:00:54.701796
passed filled the car 2023-01-23 16:01:23.843316
passed filled the car 2023-01-23 16:04:49.916835
Failed (test_drive): assert 290.0 == 300
 +  where 290.0 = <bound method Car.get_money of <car.Car object at 0x000002647DC750D0>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000002647DC750D0>> = <car.Car object at 0x000002647DC750D0>.get_money 2023-01-23 16:05:06.901849
Failed (test_drive): assert 353.0 == 360
 +  where 353.0 = <bound method Car.get_money of <car.Car object at 0x000001B26F434220>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000001B26F434220>> = <car.Car object at 0x000001B26F434220>.get_money 2023-01-23 16:05:35.355040
Passed(test_drive): 2023-01-23 16:05:59.949913
Passed(test_drive): 2023-01-23 16:18:29.470225
Passed(test_drive): 2023-01-23 16:18:42.173895
Passed(test_drive): 2023-01-23 16:19:03.534118
Passed(test_drive): 2023-01-23 16:19:19.862498
Passed(test_drive): 2023-01-23 16:20:05.443132
Passed(test_drive): 2023-01-23 16:20:54.991724
passed filled the car 2023-01-23 16:22:07.369841
Passed(test_drive): 2023-01-23 16:22:07.385466
Passed(test_drive): 2023-01-23 16:22:47.558082
Passed(test_drive): 2023-01-23 16:23:21.184176
Passed(test_drive): 2023-01-23 16:29:41.534252
Passed(test_drive): 2023-01-23 16:30:24.737987
Passed(test_drive): 2023-01-23 16:31:06.755059
Passed(test_drive): 2023-01-23 16:33:40.481566
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000002A18A5B2AC0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000002A18A5B2AC0>> = <car.Car object at 0x000002A18A5B2AC0>.if_drive_destination_is_posible 2023-01-23 16:33:54.904291
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000021F588E10D0>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000021F588E10D0>> = <car.Car object at 0x0000021F588E10D0>.if_drive_destination_is_posible 2023-01-23 16:36:19.414581
Passed(test_drive): 2023-01-23 16:36:44.463593
Failed (test_drive): assert 29.0 == 0
 +  where 29.0 = <bound method Car.get_feul of <car.Car object at 0x00000200B52EA100>>()
 +    where <bound method Car.get_feul of <car.Car object at 0x00000200B52EA100>> = <car.Car object at 0x00000200B52EA100>.get_feul 2023-01-23 16:37:35.634898
Passed(test_drive): 2023-01-23 16:38:56.248002
Failed (test_drive): assert 0.0 == 1
 +  where 0.0 = <bound method Car.get_feul of <car.Car object at 0x000001D36FC5A100>>()
 +    where <bound method Car.get_feul of <car.Car object at 0x000001D36FC5A100>> = <car.Car object at 0x000001D36FC5A100>.get_feul 2023-01-23 16:39:18.797972
Failed (test_drive): assert 20.0 == 10
 +  where 20.0 = <bound method Car.get_feul of <car.Car object at 0x000002994CC90280>>()
 +    where <bound method Car.get_feul of <car.Car object at 0x000002994CC90280>> = <car.Car object at 0x000002994CC90280>.get_feul 2023-01-23 16:41:14.602284
Passed(test_drive): 2023-01-23 16:43:58.170205
Passed(test_drive): 2023-01-23 16:44:57.377475
Passed(test_drive): 2023-01-23 16:45:15.065584
Failed (test_drive): assert 500 == 433
 +  where 500 = <bound method Car.get_money of <car.Car object at 0x000002052D94A100>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000002052D94A100>> = <car.Car object at 0x000002052D94A100>.get_money 2023-01-23 16:45:39.769378
Failed (test_drive): assert 290.0 == 433
 +  where 290.0 = <bound method Car.get_money of <car.Car object at 0x000001834459F4C0>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000001834459F4C0>> = <car.Car object at 0x000001834459F4C0>.get_money 2023-01-23 16:45:59.863214
Passed(test_drive): 2023-01-24 21:36:32.056360
<class 'Exception'> 2023-01-24 21:56:54.107493
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 21:57:12.564652
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 22:00:05.201395
<ExceptionInfo OverflowError('u dont have any money to fuel your car') tblen=3> 2023-01-24 22:06:55.403665
<ExceptionInfo OverflowError('u dont have enough money to fuel your car') tblen=3> 2023-01-24 22:08:19.414183
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 22:18:56.542889
<ExceptionInfo TypeError("fill_fuel() missing 1 required positional argument: 'liters_of_fuel'") tblen=2> 2023-01-24 22:27:17.963639
<ExceptionInfo OverflowError('u dont have enough money to fuel your car') tblen=2> 2023-01-24 22:28:52.585654
<ExceptionInfo OverflowError('u dont have enough money to fuel your car') tblen=3> 2023-01-24 22:35:19.340980
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 22:41:11.046936
<ExceptionInfo OverflowError('u dont have enough money to fuel your car') tblen=3> 2023-01-24 22:47:24.127308
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 22:51:15.969359
<ExceptionInfo OverflowError('you trying to over refuel your car') tblen=3> 2023-01-24 22:59:01.596453
<ExceptionInfo OverflowError('u dont have enough money to fuel your car') tblen=3> 2023-01-24 22:59:48.348239
Passed(test_drive): 2023-01-24 23:21:26.568792
Failed (test_drive): assert 350.0 == 355
 +  where 350.0 = <bound method Car.get_money of <car.Car object at 0x0000018B697A14F0>>()
 +    where <bound method Car.get_money of <car.Car object at 0x0000018B697A14F0>> = <car.Car object at 0x0000018B697A14F0>.get_money 2023-01-24 23:24:51.701018
Passed(test_start_engine): 2023-01-24 23:30:34.086247
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x000001440DEBC160>.status_engine 2023-01-24 23:30:34.090250
Passed(test_set_gear): 2023-01-24 23:30:34.093246
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x000001440DEBC280>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001440DEBC280>> = <car.Car object at 0x000001440DEBC280>.get_gear 2023-01-24 23:30:34.095254
Passed(test_get_gear): 2023-01-24 23:30:34.098249
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x000001440DEBC8E0>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x000001440DEBC8E0>> = <car.Car object at 0x000001440DEBC8E0>.get_gear 2023-01-24 23:30:34.101248
Passed(test_get_speed_car): 2023-01-24 23:30:34.103247
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x000001440DEBC340>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x000001440DEBC340>> = <car.Car object at 0x000001440DEBC340>.get_car_speed 2023-01-24 23:30:34.106248
Passed(test_stop_engine): 2023-01-24 23:30:34.108248
Failed (test_fuel_to_buy): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001440DEBC850>>(100)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001440DEBC850>> = <car.Car object at 0x000001440DEBC850>.if_drive_destination_is_posible 2023-01-24 23:30:34.113247
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001440DEBC820>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x000001440DEBC820>> = <car.Car object at 0x000001440DEBC820>.if_drive_destination_is_posible 2023-01-24 23:30:34.118247
Passed(test_drive): 2023-01-24 23:30:34.121246
<ExceptionInfo OverflowError('U cant drive the car beacuse u dont have engouh fuel') tblen=2> 2023-01-24 23:30:34.123252
<ExceptionInfo OverflowError('U cant drive the car beacuse u dont have engouh fuel') tblen=2> 2023-01-24 23:30:34.125259
Passed(test_drive): 2023-01-24 23:30:34.127263
Failed (test_drive): assert 350.0 == 355
 +  where 350.0 = <bound method Car.get_money of <car.Car object at 0x000001440DE87E20>>()
 +    where <bound method Car.get_money of <car.Car object at 0x000001440DE87E20>> = <car.Car object at 0x000001440DE87E20>.get_money 2023-01-24 23:30:34.130253
Passed(test_get_gear):  2023-01-24 23:30:34.235250
Passed(test_get_speed_car): 2023-01-24 23:30:34.238251
Failed (test_fuel_to_buy) : False != True 2023-01-24 23:30:34.240250
Passed(test_set_gear): 2023-01-24 23:30:34.243251
Failed (test_start_engine): None != True 2023-01-24 23:30:34.245251
Passed(test_stop_engine):  2023-01-24 23:30:34.247250
Passed(test_drive): 2023-01-24 23:30:58.774397
Passed(test_start_engine): 2023-01-24 23:31:24.137445
Failed (test_start_engine): assert True == False
 +  where True = <car.Car object at 0x0000017E169B6160>.status_engine 2023-01-24 23:31:24.144446
Passed(test_set_gear): 2023-01-24 23:31:24.147444
Failed (test_set_gear): assert 2 == 3
 +  where 2 = <bound method Car.get_gear of <car.Car object at 0x0000017E169BF370>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000017E169BF370>> = <car.Car object at 0x0000017E169BF370>.get_gear 2023-01-24 23:31:24.150447
Passed(test_get_gear): 2023-01-24 23:31:24.152444
Failed (test_get_gear): assert 0 == 1
 +  where 0 = <bound method Car.get_gear of <car.Car object at 0x0000017E169BF370>>()
 +    where <bound method Car.get_gear of <car.Car object at 0x0000017E169BF370>> = <car.Car object at 0x0000017E169BF370>.get_gear 2023-01-24 23:31:24.157447
Passed(test_get_speed_car): 2023-01-24 23:31:24.160448
Failed (test_get_speed_car): assert 60 == 70
 +  where 60 = <bound method Car.get_car_speed of <car.Car object at 0x0000017E169BF4C0>>()
 +    where <bound method Car.get_car_speed of <car.Car object at 0x0000017E169BF4C0>> = <car.Car object at 0x0000017E169BF4C0>.get_car_speed 2023-01-24 23:31:24.163447
Passed(test_stop_engine): 2023-01-24 23:31:24.165453
Failed (test_fuel_to_buy): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000017E169BFA60>>(100)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000017E169BFA60>> = <car.Car object at 0x0000017E169BFA60>.if_drive_destination_is_posible 2023-01-24 23:31:24.172446
Failed (test_if_drive_destination_is_possible_should_fail): assert False == True
 +  where False = <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000017E169BF970>>(1050)
 +    where <bound method Car.if_drive_destination_is_posible of <car.Car object at 0x0000017E169BF970>> = <car.Car object at 0x0000017E169BF970>.if_drive_destination_is_posible 2023-01-24 23:31:24.175449
Passed(test_drive): 2023-01-24 23:31:24.179444
<ExceptionInfo OverflowError('U cant drive the car beacuse u dont have engouh fuel') tblen=2> 2023-01-24 23:31:24.182444
<ExceptionInfo OverflowError('U cant drive the car beacuse u dont have engouh fuel') tblen=2> 2023-01-24 23:31:24.184444
Passed(test_drive): 2023-01-24 23:31:24.189447
Failed (test_drive): assert 350.0 == 355
 +  where 350.0 = <bound method Car.get_money of <car.Car object at 0x0000017E169EE070>>()
 +    where <bound method Car.get_money of <car.Car object at 0x0000017E169EE070>> = <car.Car object at 0x0000017E169EE070>.get_money 2023-01-24 23:31:24.194445
Passed(test_get_gear):  2023-01-24 23:31:24.294447
Passed(test_get_speed_car): 2023-01-24 23:31:24.297446
Failed (test_fuel_to_buy) : False != True 2023-01-24 23:31:24.300445
Passed(test_set_gear): 2023-01-24 23:31:24.303444
Failed (test_start_engine): None != True 2023-01-24 23:31:24.305444
Passed(test_stop_engine):  2023-01-24 23:31:24.307444
Failed (test_fuel_to_buy): 50 != 40 2023-01-24 23:39:27.166075
